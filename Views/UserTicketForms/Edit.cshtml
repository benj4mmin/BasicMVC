@model BasicMVC.Models.UserTicketForm

@{
    ViewBag.Title = "Registration";
}
    <script>
        function ShowMessage() {
            var result = confirm("By clicking submit, you confirm all information on this page is accurate and ready to submit your ticket registration.");
            if (result) {
                return true;
            } else {
                return false;
            }
        }
        function PickDate() {
            var userTicketForm = @Html.Raw(Json.Encode(Model));
            alert(userTicketForm.retiree)
            if (document.getElementById(".retired") == 1) {
                $(".retired").show();
                $(".active").hide();
                alert("retired")
            }
            else {
                $(".retired").hide();
                $(".active").show();
            }
        }
    </script>
<h3><a href="https://PLACEHOLDER" target="_blank" class="extraTickets">
    Click here to purchase additional discounted tickets
    </a>
    using password: ABC123
</h3>
<h2>Edit</h2>
<p style="color: red;">@ViewBag.ErrorMessage</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UserId)

    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.MaxTickets, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.MaxTickets, new { htmlAttributes = new { id = "MaxTicketNumber", @class = "form-control", @min = 0, @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.MaxTickets, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="margin-left: 90px;">
        <p>(Total tickets allowed to be ordered. Please enter how many you will need below)</p>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequestTickets, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RequestTickets, new { htmlAttributes = new { @class = "form-control", @min = 0 } })
            @Html.ValidationMessageFor(model => model.RequestTickets, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RequestDate, new SelectList(new DateTime[] { DateTime.Parse("2019-09-15 10:00"), DateTime.Parse("2019-09-07 10:00") }), new { htmlAttributes = new { @class = "form-control active" } })
            @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Retiree, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">

                @Html.CheckBoxFor(model => model.Retiree)
                @Html.ValidationMessageFor(model => model.Retiree, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequireTransportation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.RequireTransportation)

                @Html.ValidationMessageFor(model => model.RequireTransportation, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Comments)
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" onclick="javascript:return ShowMessage();" />
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
